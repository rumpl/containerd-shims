name: CI

on:
  schedule:
    # Once a day
    - cron: "0 0 * * *"
  workflow_dispatch:


env:
  CARGO_TERM_COLOR: always
  REPO_SLUG: "rumpl/containerd-wasi-shims"

jobs: 
  build-deislabs:
    name: ${{ matrix.runtime }}
    strategy:
      matrix:
        arch: ["x86_64", "aarch64"]
        runtime: ["lunatic", "slight", "wws"]
    if: github.event_name != 'pull_request'
    uses: ./.github/workflows/build-deislabs.yml
    with:
      arch: ${{ matrix.arch }}
      runtime: ${{ matrix.runtime }}

  build-runwasi:
    name: ${{ matrix.runtime }}
    strategy:
      matrix:
        arch: ["x86_64", "aarch64"]
        runtime: ["wasmedge", "wasmer", "wasmtime"]
    if: github.event_name != 'pull_request'
    uses: ./.github/workflows/build-runwasi.yml
    with:
      arch: ${{ matrix.arch }}
      runtime: ${{ matrix.runtime }}

  build-spinkube:
    name: spin
    strategy:
      matrix:
        arch: ["x86_64", "aarch64"]
    if: github.event_name != 'pull_request'
    uses: ./.github/workflows/build-spinkube.yml
    with:
      arch: ${{ matrix.arch }}

  hub:
    needs: [build-deislabs, build-runwasi, build-spinkube]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@master
      - name: Group artifacts by arch
        shell: bash
        run: |
          mkdir arm64
          cp containerd-shim-*-aarch64/* arm64/
          mkdir amd64
          cp containerd-shim-*-x86_64/* amd64/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REPO_SLUG }}
          ### on push default branch (main):
          # wasmedge/runwasi:<git-sha>
          tags: |
            type=sha
          bake-target: meta-helper
          flavor: |
            latest=false
      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image-cross
          push: ${{ github.event_name != 'pull_request' }}
